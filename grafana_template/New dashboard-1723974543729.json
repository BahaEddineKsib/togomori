{
  "__inputs": [
    {
      "name": "DS_MARCUSOLSSON-STATIC-DATASOURCE",
      "label": "marcusolsson-static-datasource",
      "description": "",
      "type": "datasource",
      "pluginId": "marcusolsson-static-datasource",
      "pluginName": "Business Input"
    },
    {
      "name": "DS_TOGOMORI",
      "label": "togomori",
      "description": "",
      "type": "datasource",
      "pluginId": "marcusolsson-json-datasource",
      "pluginName": "JSON API"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.1.3"
    },
    {
      "type": "datasource",
      "id": "marcusolsson-json-datasource",
      "name": "JSON API",
      "version": "1.3.16"
    },
    {
      "type": "datasource",
      "id": "marcusolsson-static-datasource",
      "name": "Business Input",
      "version": "4.2.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "volkovlabs-form-panel",
      "name": "Business Forms",
      "version": "4.3.0"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "panels": [],
      "type": "row"
    },
    {
      "datasource": {
        "type": "marcusolsson-static-datasource",
        "uid": "${DS_MARCUSOLSSON-STATIC-DATASOURCE}"
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 3,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<br>\n<br>\n<br>\n<br>\n<br>\n<h1 style=\"font-size: 55px\">üîç${CURRENT_WORKSHOP}</h1>",
        "mode": "html"
      },
      "pluginVersion": "11.1.3",
      "title": " ",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "marcusolsson-static-datasource",
        "uid": "${DS_MARCUSOLSSON-STATIC-DATASOURCE}"
      },
      "gridPos": {
        "h": 12,
        "w": 7,
        "x": 5,
        "y": 1
      },
      "id": 1,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "hidden": false,
            "id": "in",
            "labelWidth": 10,
            "section": "",
            "title": "input",
            "tooltip": "",
            "type": "string",
            "uid": "301c90af-28ba-4cbb-afa9-a964ca462f20",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = context.utils.toDataQueryResponse(context.panel.response);\nconsole.log(dataQuery);\n",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": false,
          "highlightColor": "red",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nvar commndExecutionIsDone = false;\nlet COMMAND = '';\ncontext.panel.elements.map((element) => {\n  // Check if the element's ID is \"out\"\n  if (element.id === 'in') {\n    // If the ID is \"out\", update its value to \"WARRA\"\n    COMMAND = element.value;\n  }\n});\n// Define the URL of your Flask API endpoint\nconst apiUrl = 'http://localhost:5000/command';\nconst apiOut = 'http://localhost:5000/get_output'\nasync function execute() {\n  try {\n    // Define the request options with the cmnd parameter\n    const requestOptions = {\n      method: 'GET',\n    };\n\n    // Make a request to the API with the defined options\n    var start_at = Date.now();\n    console.log(\"start at:\", start_at);\n    const clr = await fetch(`${apiUrl}?cmnd=c`, requestOptions);\n    const response = await fetch(`${apiUrl}?cmnd=${COMMAND} -s`, requestOptions);\n    var ends_at = Date.now();\n    console.log(\"ends  at:\", ends_at);\n    commndExecutionIsDone = true;\n    console.log(\"res ok\");\n    if (response.ok) {\n      // Parse the response JSON\n      const data = await response.json();\n      console.log('Responseeeeeeeeee:', data);\n\n      context.grafana.locationService.partial({ 'var-CURRENT_WORKSHOP': data.CURRENT_WORKSHOP }, true);\n      context.grafana.locationService.partial({ 'var-CURRENT_DOMAIN': data.CURRENT_DOMAIN }, true);\n      var now = new Date();\n      var dateText = now.toLocaleTimeString();\n      context.grafana.locationService.partial({ 'var-refresh': dateText }, true);\n    } else {\n      // Handle non-successful responses\n      console.error('Errorrr:', response.statusText);\n    }\n    return response;\n  } catch (error) {\n    //Handle network errors\n    console.error('Network error:', error);\n  }\n\n}\n\n\n\n// Function to make a request to the API\nconst fetchData = async () => {\n  try {\n\n\n    // Make a request to the API with the defined options\n    const response = execute();\n    // Check if the response is successful (status code 200)\n    var x = 0;\n    while (!commndExecutionIsDone || x != 2) {\n      try {\n        // Define the request options with the cmnd parameter\n        const requestOptions = {\n          method: 'GET',\n        };\n\n        // Make a request to the API with the defined options\n        var start_at = Date.now();\n        console.log(\"start at:\", start_at);\n        const response = await fetch(`${apiOut}`, requestOptions);\n        var ends_at = Date.now();\n        console.log(\"ends  at:\", ends_at);\n        if (response.ok) {\n          // Parse the response JSON\n          const data = await response.text();\n          context.grafana.locationService.partial({ 'var-LAST_OUTPUT': data }, true);\n          var now = new Date();\n          //var dateText = now.toLocaleTimeString();\n          //locationService.partial({ 'var-refresh': dateText }, true);\n        } else {\n          // Handle non-successful responses\n          console.error('Errorrr:', response.statusText);\n        }\n        //return response;\n      } catch (error) {\n        //Handle network errors\n        console.error('Network error:', error);\n      }\n      console.log(\"NB\", x, \"commndExecutionIsDone: \", commndExecutionIsDone);\n      await sleep(500);\n      if (!commndExecutionIsDone) {\n        x = 0\n      }\n      else {\n        x = x + 1;\n      }\n\n\n    }\n\n  } catch (error) {\n    //Handle network errors\n    console.error('Network error:', error);\n  }\n};\n\n// Call the fetchData function to make the request\nfetchData();\nreturn;",
          "confirm": false,
          "contentType": "application/json",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "method": "-",
          "payload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "payloadMode": "all"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.3.0",
      "targets": [
        {
          "datasource": {
            "type": "marcusolsson-static-datasource",
            "uid": "${DS_MARCUSOLSSON-STATIC-DATASOURCE}"
          },
          "refId": "A"
        }
      ],
      "title": "COMMAND LINE APPLICATION",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "marcusolsson-static-datasource",
        "uid": "${DS_MARCUSOLSSON-STATIC-DATASOURCE}"
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 2,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "${LAST_OUTPUT}",
        "mode": "code"
      },
      "pluginVersion": "11.1.3",
      "title": "OUTPUT",
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 5,
      "panels": [],
      "title": "Row title",
      "type": "row"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_TOGOMORI}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_TOGOMORI}"
          },
          "fields": [
            {
              "jsonPath": "nb",
              "type": "number"
            }
          ],
          "method": "GET",
          "params": [
            [
              "refresh",
              "${refresh}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/get_numberDomainsByWorkshop"
        }
      ],
      "title": "number of domains in workshop [ ${CURRENT_WORKSHOP} ]",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_TOGOMORI}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 0,
        "y": 18
      },
      "id": 7,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": []
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_TOGOMORI}"
          },
          "fields": [
            {
              "jsonPath": "$[*].name",
              "type": "string"
            },
            {
              "jsonPath": "$.[*].value",
              "language": "jsonpath",
              "name": "",
              "type": "number"
            }
          ],
          "method": "GET",
          "params": [
            [
              "refresh",
              "${refresh}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/get_ipStat"
        }
      ],
      "title": "gussing networks",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_TOGOMORI}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 5,
        "y": 18
      },
      "id": 9,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_TOGOMORI}"
          },
          "fields": [
            {
              "jsonPath": "$[*].name"
            },
            {
              "jsonPath": "$[*].value",
              "language": "jsonpath",
              "name": ""
            }
          ],
          "method": "GET",
          "params": [
            [
              "refresh",
              "${refresh}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/get_domain_names"
        }
      ],
      "title": "domain names ( subs )",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_TOGOMORI}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 10,
        "y": 18
      },
      "id": 10,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_TOGOMORI}"
          },
          "fields": [
            {
              "jsonPath": "$[*].name"
            },
            {
              "jsonPath": "$[*].value",
              "language": "jsonpath",
              "name": ""
            }
          ],
          "method": "GET",
          "params": [
            [
              "refrech",
              "${refresh}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/get_portsStat"
        }
      ],
      "title": "open ports stats for all domains",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_TOGOMORI}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "gauge",
                  "valueDisplayMode": "color"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 18,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 8,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "paths"
          }
        ]
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_TOGOMORI}"
          },
          "fields": [
            {
              "jsonPath": "$.data[*].domain",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].ip",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].paths",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].ports",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].js",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].techs",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].whois",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].robots_file",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].server_file",
              "language": "jsonpath",
              "name": ""
            },
            {
              "jsonPath": "$.data[*].tags",
              "language": "jsonpath",
              "name": ""
            }
          ],
          "method": "GET",
          "params": [
            [
              "refresh",
              "${refresh}"
            ]
          ],
          "queryParams": "",
          "refId": "A",
          "urlPath": "/get_domains"
        }
      ],
      "title": "Panel Title",
      "type": "table"
    }
  ],
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "odna",
          "value": "odna"
        },
        "hide": 2,
        "name": "CURRENT_WORKSHOP",
        "options": [
          {
            "selected": false,
            "text": "",
            "value": ""
          }
        ],
        "query": "odna",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "hide": 2,
        "name": "CURRENT_DOMAIN",
        "options": [],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "5:28:36 AM",
          "value": "5:28:36 AM"
        },
        "hide": 0,
        "name": "refresh",
        "options": [
          {
            "selected": false,
            "text": "",
            "value": ""
          }
        ],
        "query": "5:28:36 AM",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "hide": 2,
        "name": "LAST_OUTPUT",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "New dashboard",
  "uid": "ddutdq076hmv4f",
  "version": 38,
  "weekStart": ""
}